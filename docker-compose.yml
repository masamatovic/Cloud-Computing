version: "3"
services:
  postgres:
    image: "postgres"
    container_name: postgres
    networks:
      - application-network
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=cloud
    ports:
      - 5432:5432
    tty: true
    volumes:
      - postgres-data:/var/lib/postgresql/data

  postgres2:
    image: "postgres"
    container_name: postgres2
    networks:
      - application-network
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=cloud
    ports:
      - 5433:5432
    tty: true
    volumes:
      - postgres-data2:/var/lib/postgresql/data

  webapp:
    build: ./webapp
    container_name: webapp
    ports:
      - "8081:8081"
    tty: true
    networks:
      - application-network
    environment:
      POSTGES_CONNECTION_STING: root
      DATABASE_DOMAIN: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: root
      POSTGRES_DB: cloud
    depends_on:
      - postgres

  webapp2:
    build: ./webapp
    container_name: webapp2
    ports:
      - "8082:8081"
    tty: true
    networks:
      - application-network
    environment:
      POSTGES_CONNECTION_STING: root
      DATABASE_DOMAIN: postgres2
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: root
      POSTGRES_DB: cloud
    depends_on:
      - postgres2

  nginx_app:
    build: ./nginxApp
    container_name: nginx_app
    ports:
      - "80:80"
    links:
      - webapp
  nginx_load_balancer:
    build: ./nginxLoadBalancer
    container_name: nginx_load_balancer
    ports:
      - "81:80"
    links:
      - webapp
      - webapp2

networks:
  application-network:

volumes:
  postgres-data:
  postgres-data2:
